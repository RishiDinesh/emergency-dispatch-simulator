@page "/"

@inject IScrollManager ScrollManager

<PageTitle>EDS - Home</PageTitle>

<MudContainer Class="pb-2" MaxWidth="MaxWidth.Small">
    <MudText Class="mb-6" Typo="Typo.h4">Create your own emergency dispatch simulation</MudText>

    <MudForm Model="_parameters" Spacing="6">
        @foreach (var optionGroupName in _optionGroupNames)
        {
            var options = _availableOptions[optionGroupName];
            
            <MudSelect Id="@optionGroupName" T="string" Value="_parameters.GetParameter(optionGroupName)" ValueChanged="x => _parameters.SetParameter(optionGroupName, x)" Label="@options.Label" HelperText="@options.Description" Clearable>
                @foreach (var option in options.Options.Order())
                {
                    <MudSelectItem Value="@option">@option.Replace('_', ' ')</MudSelectItem>
                }
            </MudSelect>
        }
        
        <div class="mud-full-width d-flex flex-row align-center justify-end gap-3 flex-wrap">
            <MudButton OnClick="OnFormSubmit" Color="Color.Inherit" Variant="Variant.Filled" EndIcon="@Icons.Material.Rounded.Loop">Randomize</MudButton>
            <MudButton OnClick="OnFormSubmit" Color="Color.Primary" Variant="Variant.Filled" EndIcon="@Icons.Material.Rounded.KeyboardArrowRight">Create Simulation</MudButton>
        </div>
    </MudForm>
</MudContainer>

@* Disable this for now *@
@if (false)
{
    <MudDrawer Class="docs-page-content-navigation-drawer" Open Breakpoint="Breakpoint.Lg" Anchor="Anchor.End" ClipMode="DrawerClipMode.Always" Elevation="0" Color="Color.Transparent">
        <div class="d-flex flex-column">
            <MudNavMenu Class="pl-4 mb-4">
                <MudText Typo="Typo.subtitle1" Class="title" GutterBottom="true">
                    Contents
                </MudText>

                @foreach (var optionGroupName in _optionGroupNames)
                {
                    var options = _availableOptions[optionGroupName];
                    <MudNavLink Match="NavLinkMatch.All" OnClick="_ => OnNavLinkClick(optionGroupName)">
                        @options.Label
                    </MudNavLink>
                }
            </MudNavMenu>
            
            <MudButton Class="mx-4" OnClick="OnFormSubmit" Color="Color.Primary" Variant="Variant.Filled" Size="Size.Small">Create Simulation</MudButton>
        </div>
    </MudDrawer>
}


@code {

    private Dictionary<string, ScenarioInputOption> _availableOptions = ScenarioInputOptions.GetAvailableOptions();
    private ScenarioInputParameters _parameters = new();

    private ValueTask OnNavLinkClick(string componentId) => ScrollManager.ScrollIntoViewAsync($"#{componentId}", ScrollBehavior.Smooth);

    private readonly List<string> _optionGroupNames =
    [
        ScenarioInputOptions.GroupCategory,
        ScenarioInputOptions.GroupLocation,
        ScenarioInputOptions.GroupGender,
        ScenarioInputOptions.GroupLanguage,
        ScenarioInputOptions.Emotion,
    ];

    private async Task OnFormSubmit()
    {
        
    }

}