@page "/"

@inject IScrollManager ScrollManager

<PageTitle>EDS - Home</PageTitle>

<MudContainer MaxWidth="MaxWidth.Small">
    <MudText Class="mb-12" Typo="Typo.h4">Create your own emergency dispatch simulation</MudText>

    <MudForm Model="_parameters" Spacing="12">
        @foreach (var optionGroupName in _optionGroupNames)
        {
            var options = _availableOptions[optionGroupName];
            
            <MudSelect T="string" Value="_parameters.GetParameter(optionGroupName)" ValueChanged="x => _parameters.SetParameter(optionGroupName, x)" Label="@options.Label" HelperText="@options.Description" Clearable>
                @foreach (var option in options.Options.Order())
                {
                    <MudSelectItem Value="@option">@option.Replace('_', ' ')</MudSelectItem>
                }
            </MudSelect>
        }
        
        <div class="mud-full-width d-flex flex-row align-center justify-end">
            <MudButton OnClick="OnFormSubmit" Color="Color.Primary" Variant="Variant.Filled" EndIcon="@Icons.Material.Rounded.KeyboardArrowRight">Create Simulation</MudButton>
        </div>
    </MudForm>
</MudContainer>


<MudDrawer Class="docs-page-content-navigation-drawer" Open Breakpoint="Breakpoint.Lg" Anchor="Anchor.End" ClipMode="DrawerClipMode.Always" Elevation="0" Color="Color.Transparent">
    <div class="GetPanelClass">
        <MudNavMenu Class="pl-4">
            <MudText Typo="Typo.subtitle1" Class="title" GutterBottom="true">
                Contents
            </MudText>

            @* @foreach (var i in Enumerable.Range(0, 10)) *@
            @* { *@
            @*     var j = i; *@
            @*     <MudNavLink Match="NavLinkMatch.All" OnClick="_ => OnNavLinkClick(j.ToString())"> *@
            @*         @i.ToString() *@
            @*     </MudNavLink> *@
            @* } *@
        </MudNavMenu>
    </div>
</MudDrawer>


@code {

    private Dictionary<string, ScenarioInputOption> _availableOptions = ScenarioInputOptions.GetAvailableOptions();
    private ScenarioInputParameters _parameters = new();

    private ValueTask OnNavLinkClick(string componentId) => ScrollManager.ScrollIntoViewAsync($"input-{componentId}", ScrollBehavior.Smooth);

    private readonly List<string> _optionGroupNames =
    [
        ScenarioInputOptions.GroupCategory,
        ScenarioInputOptions.GroupLocation,
        ScenarioInputOptions.GroupGender,
        ScenarioInputOptions.GroupLanguage,
        ScenarioInputOptions.Emotion,
    ];

    private async Task OnFormSubmit()
    {
        
    }

}